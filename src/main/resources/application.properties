#server.port=${port:3001}
   #se usa cuando se levantan los servicio sin docker
server.port=${DISNET_WEB_APP_PORT:3001}

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url = ${DISNET_DB_DATASOURCE_URL:jdbc:mysql://138.4.130.153:30601/disnetdb?autoReconnect=true&useSSL=false}
#spring.datasource.url = ${DISNET_DB_DATASOURCE_URL:jdbc:mysql://localhost:3306/disnetdb?autoReconnect=true&useSSL=false}
spring.datasource.username = ${DISNET_DB_MYSQL_USER}
spring.datasource.password = ${DISNET_DB_MYSQL_PASSWORD}
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
my.disnet.layers.datasource.p = ${DISNET_DB_PASSWORD}
my.disnet.layers.datasource.u = ${DISNET_DB_USERNAME}
my.disnet.layers.datasource.pheno = jdbc:mysql://${DISNET_DB_HOST}:${DISNET_DB_PORT}/edsssdb?autoReconnect=true&useSSL=false
my.disnet.layers.datasource.bio = jdbc:mysql://${DISNET_DB_HOST}:${DISNET_DB_PORT}/disnet_biolayer?autoReconnect=true&useSSL=false
my.disnet.layers.datasource.drugs = jdbc:mysql://${DISNET_DB_HOST}:${DISNET_DB_PORT}/disnet_drugslayer?autoReconnect=true&useSSL=false
#spring.datasource.tomcat.max-wait= 20000
#spring.datasource.tomcat.max-active= 50
#spring.datasource.tomcat.max-idle= 20
#spring.datasource.tomcat.min-idle= 15
#jdbc:mysql://localhost:13061/disnetdb?autoReconnect=true&useSSL=false

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto = validation.

spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = Thymeleaf configurations
# ===============================
#spring.thymeleaf.mode=LEGACYHTML5 you will need the NekoHTML 1.9.21 or later
#spring.thymeleaf.cache=false

# ===============================
# = JSON Web Token
# ===============================
jwt.header = ${JWT_HEADER:DISNET_Authorization}
jwt.secret = ${JWT_SECRET:d15n3t_53cr3t_1d}
jwt.expiration = ${JWT_EXPIRATION:604800}
jwt.route.authentication.path = ${JWT_AUTH_PATH:auth}
jwt.route.authentication.refresh = ${JWT_AUTH_REFRESH:refresh}

jwt.claims.name.token = ${JWT_CLAIMS_NAME_TOKEN:token}
jwt.claims.name.api_code = ${JWT_CLAIMS_NAME_API_CODE:api_code}
jwt.claims.name.request = ${JWT_CLAIMS_NAME_REQUEST:request}
jwt.claims.name.url = ${JWT_CLAIMS_NAME_URL:url}
jwt.claims.name.method = ${JWT_CLAIMS_NAME_METHOD:method}
jwt.claims.name.transaction_id = ${JWT_CLAIMS_NAME_TRANSACTION_ID:transaction_id}

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder (para hacer login)
# ==============================================================
spring.queries.users-query = SELECT p.person_id, p.password, p.enabled FROM person p WHERE p.status = 'OK' AND p.person_id=?
spring.queries.roles-query = SELECT p.person_id, pp.authority FROM person p INNER JOIN profile pp ON pp.profile_id = p.profile_id WHERE p.status = 'OK' AND p.person_id=? 

# ===============================
# = EMAIL Configuration
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${DISNET_EMAIL:gerardo.lagunes@ctb.upm.es}
spring.mail.password=${DISNET_PASSWORD:DisnetM@il007}
spring.mail.properties.mail.smtp.starttls.enabled=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

email.template.confirmation = ${EMAIL_TAMPLATE_CONFIRMATION:email/confirmation_email}
email.template.welcome = ${EMAIL_TAMPLATE_WELCOME:email/welcome}
email.template.reset_password = ${EMAIL_TAMPLATE_RESET_PASSWORD:email/reset_password}

email.template.confirmation.subject = ${EMAIL_TAMPLATE_CONFIRMATION_SUBJECT:DISNET Confirmation Email}
email.template.welcome.subject = ${EMAIL_TAMPLATE_WELCOME_SUBJECT:DISNET Welcome Email}
email.template.reset_password.subject = ${EMAIL_TAMPLATE_RESET_PASSWORD_SUBJECT:DISNET Reset Password Email}

email.template.from.noreply.address = ${EMAIL_TAMPLATE_FROM_NOREPLY_ADDRESS:noreply@disnet.ctb.upm.es}
email.template.from.noreply.personal = ${EMAIL_TAMPLATE_FROM_NOREPLY_PERSONAL:noreply@disnet.ctb.upm.es}

# ===============================
# = CONSTANTS
# ===============================
constants.http.header = ${HTTP_HEADER:http://}
constants.https.header = ${HTTPS_HEADER:https://}
constants.url.disnet_web_app = ${DISNET_WEB_APP_URL:localhost:3001}
constants.user.confirmation.path = ${USER_CONFIRMATION_PATH:/confirmation_email}
constants.parameter.user.confirmation.token.name = ${PARAMETER_USER_CONFIRMATION_TOKEN_NAME:token}

# ===============================
# = DISNET REST API ENDPOINTS
# ===============================
my.service.client.disnet.name = ${DISNET_SERVICE_NAME_:disnet-client}
my.service.client.disnet.url = ${DISNET_SERVICE_CLIENT_URL:138.4.130.153:10604/api/disnet}
#my.service.client.disnet.url = ${DISNET_SERVICE_CLIENT_URL:disnet-api_rest:8080/api/disnet}
my.service.client.disnet.last.desc_statistics.path = ${DISNET_SERVICE_LAST_JSON_DESCRIPTIVE_STATISTICS_PATH:/analysis/descriptive/last/json}


# ===============================
# = Error control
# ===============================
my.service.error_code = ${DISNET_WEB_APP_ERROR_CODE:04}
disnet.general.error_code = ${DISNET_GENERAL_ERROR_CODE:DNERR_}